---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/common-4.4.0/charts/library/common/values.schema.json
defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 1997
    runAsGroup: 1997
    fsGroup: 1997
    fsGroupChangePolicy: OnRootMismatch
    seccompProfile:
      type: RuntimeDefault

controllers:
  server:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: zabbix/zabbix-server-pgsql
          tag: alpine-7.4.3
        env:
          TZ: Europe/Warsaw
          ZBX_HOSTNAME: "zabbix-server"
          ZBX_CACHESIZE: 128M
          ZBX_HISTORYCACHESIZE: 64M
          ZBX_HISTORYINDEXCACHESIZE: 32M
          ZBX_TRENDCACHESIZE: 32M
          ZBX_VALUECACHESIZE: 128M
          POSTGRES_USE_IMPLICIT_SEARCH_PATH: "true"
          # Node address for HA mode
          ZBX_NODEADDRESS:
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          # Java Gateway settings
          ZBX_JAVAGATEWAY_ENABLE: "false"
          # Web Service settings
          ZBX_STARTREPORTWRITERS: "0"
          # Database connection
          DB_SERVER_HOST: &dbHost
            valueFrom:
              secretKeyRef:
                name: zabbix-pguser-zabbix
                key: host
          DB_SERVER_PORT: &dbPort
            valueFrom:
              secretKeyRef:
                name: zabbix-pguser-zabbix
                key: port
          POSTGRES_DB: &dbName
            valueFrom:
              secretKeyRef:
                name: zabbix-pguser-zabbix
                key: dbname
          POSTGRES_USER: &dbUser
            valueFrom:
              secretKeyRef:
                name: zabbix-pguser-zabbix
                key: user
          POSTGRES_PASSWORD: &dbPassword
            valueFrom:
              secretKeyRef:
                name: zabbix-pguser-zabbix
                key: password

        probes:
          liveness:
            enabled: true
            custom: true
            spec:
              tcpSocket:
                port: 10051
              initialDelaySeconds: 30
              periodSeconds: 10
          readiness:
            enabled: true
            custom: true
            spec:
              tcpSocket:
                port: 10051
              initialDelaySeconds: 15
              periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - "ALL"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            memory: 1Gi

      agent:
        image:
          repository: zabbix/zabbix-agent2
          tag: alpine-7.4.3
        env:
          TZ: Europe/Warsaw
          ZBX_HOSTNAME: "zabbix-server"
          ZBX_SERVER_HOST: "zabbix-server"
          ZBX_SERVER_PORT: "10051"
          ZBX_ACTIVESERVERS: "zabbix-server"
          ZBX_DEBUGLEVEL: "3"
          ZBX_TIMEOUT: "4"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - "ALL"
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            memory: 128Mi

  web:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: zabbix/zabbix-web-nginx-pgsql
          tag: alpine-7.4.3
        env:
          TZ: Europe/Warsaw
          ZBX_SERVER_HOST: zabbix-server
          ZBX_SERVER_PORT: "10051"
          DB_SERVER_HOST: *dbHost
          DB_SERVER_PORT: *dbPort
          POSTGRES_DB: *dbName
          POSTGRES_USER: *dbUser
          POSTGRES_PASSWORD: *dbPassword
          PHP_TZ: Europe/Warsaw
        probes:
          liveness:
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 30
              periodSeconds: 10
          readiness:
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 15
              periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - "ALL"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            memory: 512Mi

  dbMigration:
    type: job
    annotations:
      "helm.sh/hook": pre-install,pre-upgrade
      "helm.sh/hook-weight": "-5"
      "helm.sh/hook-delete-policy": before-hook-creation
    pod:
      restartPolicy: OnFailure
    containers:
      app:
        image:
          repository: ghcr.io/zabbix-community/zabbix-server-create-upgrade-db
          tag: 7.4-20250802113243
        args:
          - init_and_upgrade_db
        env:
          TZ: Europe/Warsaw
          DB_SERVER_HOST: *dbHost
          DB_SERVER_PORT: *dbPort
          POSTGRES_USER: *dbUser
          POSTGRES_PASSWORD: *dbPassword
          POSTGRES_DB: *dbName
          ZBX_SERVER_DEPLOYMENT_NAME: zabbix-server
          HELM_HOOK_TYPE: upgrade
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - "ALL"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            memory: 512Mi
service:
  server:
    controller: server
    ports:
      server:
        port: 10051
        protocol: TCP

  web:
    controller: web
    ports:
      http:
        port: 8080
        protocol: TCP

route:
  web:
    enabled: true
    hostnames:
      - zabbix.lpo-lab.dev
    parentRefs:
      - name: envoy-external
        namespace: network
    rules:
      - backendRefs:
          - identifier: web
            port: 8080

persistence:
  zabbix-data:
    type: persistentVolumeClaim
    existingClaim: zabbix-data
    advancedMounts:
      server:
        app:
          - path: /var/lib/zabbix

  tmp:
    type: emptyDir
    medium: Memory
    advancedMounts:
      web:
        app:
          - path: /tmp
